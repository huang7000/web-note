{"version":3,"sources":["webpack:///./src/demos/nodeDemo/helloworld.js"],"names":["fs","require","getFileData","fileName","Promise","resolve","readStream","createReadStream","setEncoding","on","chunk","all","then","result","writeStream","createWriteStream","write","end","readFile","err","content","console","log","toString"],"mappings":"0HA4EA,IAAIA,EAAMC,EAAQ,QAElB,SAASC,EAAYC,GACpB,OAAO,IAAIC,QAAQC,IAChB,IAAIC,EAAaN,EAAGO,iBAAiBJ,GACrCG,EAAWE,YAAY,QACvBF,EAAWG,GAAG,OAAOC,GAAOL,EAAQK,MAIxCN,QAAQO,IAAI,CAACT,EAAY,aAAaA,EAAY,gBAAgBU,KAAKC,IACpE,IAAIC,EAAcd,EAAGe,kBAAkB,cAEvCD,EAAYE,MAAMH,EAAO,GAAG,IAAIA,EAAO,GAAG,QAC1CC,EAAYG,MAEZjB,EAAGkB,SAAS,aAAa,CAACC,EAAIC,IAAUC,QAAQC,IAAIF,EAAQG","file":"js/chunk-050bdf4a.dcb0edde.js","sourcesContent":["/* eslint-disable no-console */\n// eslint-disable-next-line no-console\n// console.log(\"cd E:/userproject/web-note/src/demos/nodeDemo\");\n// console.log(\"node helloworld.js\");\n// const http = require(\"http\");\n// const hostname = \"127.0.0.1\";\n// const port = 8080;\n// const server = http.createServer((req, res) => {\n//   res.statusCode = 200;\n//   res.setHeader(\"Content-Type\", \"text/plain\");\n//   res.end(\"hello world\");\n// });\n\n// server.listen(port, hostname, () => {\n//   console.log(`服务器运行在 http://${hostname}:${port}/`);\n// });\n//event.js 文件\n// var EventEmitter = require(\"events\").EventEmitter;\n// var event = new EventEmitter();\n// // event.on(\"some_event\", function () {\n// //   console.log(\"some_event 事件触发\");\n// // });\n// setTimeout(function () {\n//   event.emit(\"error\");\n// }, 1000);\n\n// const buf = Buffer.from(\"runoob2\", \"ascii\");\n\n// // 输出 72756e6f6f62\n// console.log(buf.toString(\"hex\"));\n\n// // 输出 cnVub29i\n// console.log(buf.toString(\"base64\"));\n// const buf = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5]);\n// const json = JSON.stringify(buf);\n\n// // 输出: {\"type\":\"Buffer\",\"data\":[1,2,3,4,5]}\n// //console.log(json);\n\n// const copy = JSON.parse(json, (key, value) => {\n//     return value && value.type === \"Buffer\" ?\n//         Buffer.from(value.data) :\n//         value;\n// });\n\n// const copy2 = JSON.parse(json, (key, value) => {\n//     if(value && value.type === \"Buffer\"){\n//         console.log(\"true\");\n//         console.log(value);\n//     }else{\n//         console.log(\"false\");\n//         console.log(value);\n//     }\n//     return value;\n// });\n// 输出: <Buffer 01 02 03 04 05>\n//console.log(copy);\n//console.log(copy2);\n// var buffer1 = Buffer.from('runoob');\n// // 剪切缓冲区\n// var buffer2 = buffer1.slice(0,2);\n// console.log(\"buffer1 : \" + buffer1.toString());//buffer1 : runoob\n// console.log(\"buffer2 : \" + buffer2.toString());//buffer2 : ru\n\n// 裁剪\n// var buffer_origin = Buffer.from('runoob');\n// var buffer_slice = buffer_origin.slice(0,2);\n// console.log(\"buffer slice content: \"+buffer_slice.toString());\n// console.log(\"buffer origin content: \"+buffer_origin.toString());\n// //buffer_slice.write(\"wirte\"); // Write buffer slice\n\n// // 裁剪前与原始字符串的改变\n// console.log(\"buffer slice content: \"+buffer_slice.toString());\n// console.log(\"buffer origin content: \"+buffer_origin.toString());\n\n//引入fs模块\nvar fs =  require(\"fs\")\n//封装请求文件数据的函数\nfunction getFileData(fileName){\n return new Promise(resolve=>{\n    var readStream = fs.createReadStream(fileName)  \n    readStream.setEncoding('UTF8')\n    readStream.on(\"data\",chunk=>resolve(chunk))\n  })\n}\n//并发请求\nPromise.all([getFileData(\"input.txt\"),getFileData(\"output.txt\")]).then(result=>{\n   var writeStream = fs.createWriteStream(\"output.txt\");\n   //讲两个文件的内容重新再写入到output.txt中\n   writeStream.write(result[0]+\",\"+result[1],\"UTF8\");\n   writeStream.end();\n   //再获取output.txt文件的内容\n   fs.readFile(\"output.txt\",(err,content)=>console.log(content.toString()))\n})"],"sourceRoot":""}