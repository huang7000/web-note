(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d226ccd"],{e9cf:function(s,t,r){"use strict";r.r(t);var a=function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("section",[r("hv-snippet",{attrs:{title:""}},[r("template",{slot:"title"},[r("p",[s._v("可迭代性")])]),r("ol",[r("li",[s._v("对象上的 Symbol.iterator 函数负责返回供迭代的值。")]),r("li",[s._v("for..of 和 for..in 均可迭代一个列表；但是用于迭代的值却不同。")]),r("li",[s._v("for..in 迭代的是对象的 键 的列表，而 for..of 则迭代对象的键对应的值。")]),r("li",[s._v("另一个区别是 for..in 可以操作任何对象；它提供了查看对象属性的一种方法。 但是 for..of 关注于迭代对象的值。")])]),r("div",{staticClass:"hv-snippet--tag hv-snippet--tag-typescript"},[s._v("typescript")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" list = ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v("];\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" i "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" list) {\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(i); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "0", "1", "2",')]),s._v("\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" i of list) {\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(i); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "4", "5", "6"')]),s._v("\n}\n")])]),r("p",[s._v("内置对象 Map 和 Set 已经实现了 Symbol.iterator 方法，让我们可以访问它们保存的值。")]),r("div",{staticClass:"hv-snippet--tag hv-snippet--tag-typescript"},[s._v("typescript")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" pets = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Set(["),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cat"')]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Dog"')]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Hamster"')]),s._v("]);\npets["),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"species"')]),s._v("] = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mammals"')]),s._v(";\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" pet "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" pets) {\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(pet); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "species"')]),s._v("\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" pet of pets) {\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(pet); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Cat", "Dog", "Hamster"')]),s._v("\n}\n")])])],2),r("hv-snippet",{attrs:{title:""}},[r("template",{slot:"title"},[r("p",[s._v("代码生成")])]),r("p",[s._v("当生成目标为 ES5 或 ES3，迭代器只允许在 Array 类型上使用。 在非数组值上使用 for..of 语句会得到一个错误，就算这些非数组值已经实现了 Symbol.iterator 属性。")]),r("div",{staticClass:"hv-snippet--tag hv-snippet--tag-typescript"},[s._v("typescript")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" numbers = ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("];\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" num of numbers) {\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(num);\n}\n")])]),r("p",[s._v("生成的代码为：")]),r("div",{staticClass:"hv-snippet--tag hv-snippet--tag-javascript"},[s._v("javascript")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" numbers = ["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("];\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" _i = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; _i < numbers.length; _i++) {\n "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" num = numbers[_i];\n "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(num);\n}\n")])]),r("p",[s._v("目标为 ECMAScript 2015 或更高\n当目标为兼容 ECMAScipt 2015 的引擎时，编译器会生成相应引擎的 for..of 内置迭代器实现方式。")])],2)],1)},e=[],p=r("2877"),l={},n=Object(p["a"])(l,a,e,!1,null,null,null);t["default"]=n.exports}}]);
//# sourceMappingURL=chunk-2d226ccd.fc31bcf9.js.map