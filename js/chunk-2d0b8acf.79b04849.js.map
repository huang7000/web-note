{"version":3,"sources":["webpack:///./src/demos/tsDemo/02.js"],"names":["_a","_b","decLiteral","hexLiteral","binaryLiteral","octalLiteral","console","log","userName","sentence","numberList","numList","readolyArray","objectlist","tupleList","_c","first","second","o","a","b","c","newName1","newName2","a_1","b_1"],"mappings":"gHACA,IAAIA,EAAIC,EACJC,EAAa,EACbC,EAAa,MACbC,EAAgB,GAChBC,EAAe,IACnBC,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ,IAAIG,EAAW,aAEXC,EAAW,qBAAuBD,EAAW,IACjDF,QAAQC,IAAIC,GACZF,QAAQC,IAAIE,GACZ,IAAIC,EAAa,CAAC,EAAG,EAAG,GACpBC,EAAU,CAAC,EAAG,EAAG,GACjBC,EAAe,CAAC,EAAG,EAAG,EAAG,GAC7BN,QAAQC,IAAIG,GACZJ,QAAQC,IAAII,GACZL,QAAQC,IAAIK,GACZ,IAAIC,EAAa,CAAC,QAAS,IAC3BP,QAAQC,IAAIM,EAAW,IAKvB,IAAIC,EAAY,CAAC,QAAS,IAAI,GAC9BR,QAAQC,IAAIO,EAAU,IACtB,IAAIC,EAAK,CAAC,EAAG,GAAIC,EAAQD,EAAG,GAAIE,EAASF,EAAG,GAC5CT,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GACZjB,EAAK,CAACiB,EAAQD,GAAQA,EAAQhB,EAAG,GAAIiB,EAASjB,EAAG,GACjDM,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GACZ,IAAIC,EAAI,CACJC,EAAG,MACHC,EAAG,GACHC,EAAG,OAEHF,EAAID,EAAEC,EAAGC,EAAIF,EAAEE,EACnBd,QAAQC,IAAIY,GACZb,QAAQC,IAAIa,GACXnB,EAAK,CAAEkB,EAAG,MAAOC,EAAG,KAAOD,EAAIlB,EAAGkB,EAAGC,EAAInB,EAAGmB,EAC7Cd,QAAQC,IAAIY,GACZb,QAAQC,IAAIa,GACZ,IAAIE,EAAWJ,EAAEC,EAAGI,EAAWL,EAAEE,EACjCd,QAAQC,IAAIe,GACZhB,QAAQC,IAAIgB,GAERjB,QAAQC,IAAI,QACZ,IAAIiB,EAAMN,EAAEC,EAAGM,EAAMP,EAAEE,EACvBd,QAAQC,IAAIiB,GACZlB,QAAQC,IAAIkB","file":"js/chunk-2d0b8acf.79b04849.js","sourcesContent":["\"use strict\";\nvar _a, _b;\nvar decLiteral = 6;\nvar hexLiteral = 0xf00d;\nvar binaryLiteral = 10;\nvar octalLiteral = 484;\nconsole.log(decLiteral);\nconsole.log(hexLiteral);\nconsole.log(binaryLiteral);\nconsole.log(octalLiteral);\nvar userName = \"huang 7000\";\n//模版字符串\nvar sentence = \"Hello, my name is \" + userName + \".\";\nconsole.log(userName);\nconsole.log(sentence);\nvar numberList = [1, 2, 3];\nvar numList = [1, 2, 3];\nvar readolyArray = [1, 2, 3, 4];\nconsole.log(numberList);\nconsole.log(numList);\nconsole.log(readolyArray);\nvar objectlist = [\"hello\", 10]; //元组 Tuple\nconsole.log(objectlist[0]); // hello\n// objectlist[2]=333 //333\n// objectlist[2]=\"hi\" //hi\n//objectlist[3]= true; // Error, 布尔不是(string | number)类型\n//console.log(objectlist[2]);\nvar tupleList = [\"hello\", 10, true]; //元组 Tuple\nconsole.log(tupleList[2]);\nvar _c = [1, 2], first = _c[0], second = _c[1]; //first 1,second 2\nconsole.log(first);\nconsole.log(second);\n_a = [second, first], first = _a[0], second = _a[1]; //first 2,second 1\nconsole.log(first);\nconsole.log(second);\nvar o = {\n    a: \"foo\",\n    b: 12,\n    c: \"bar\",\n};\nvar a = o.a, b = o.b;\nconsole.log(a);\nconsole.log(b);\n(_b = { a: \"baz\", b: 101 }, a = _b.a, b = _b.b);\nconsole.log(a);\nconsole.log(b);\nvar newName1 = o.a, newName2 = o.b; //等同 let newName1 = o.a; let newName2 = o.b;\nconsole.log(newName1);\nconsole.log(newName2);\n{\n    console.log(\"指示类型\");\n    var a_1 = o.a, b_1 = o.b;\n    console.log(a_1);\n    console.log(b_1);\n}\n"],"sourceRoot":""}