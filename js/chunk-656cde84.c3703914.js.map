{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./src/demos/elDemo/utils/common.js"],"names":["flags","f","RegExp","prototype","configurable","get","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","call","source","R","this","concat","undefined","name","dateFormat","date","toString","newDate","Date","year","getFullYear","month","getMonth","day","getDate","dateTimeFormat","dateTime","newDateTime","h","getHours","m","getMinutes","s","getSeconds","thousandToNumFormat","num","thousand","fixedNum","toFixed","reg1","reg2","result","replace","num1","num2","numToThousandFormat"],"mappings":"mGACI,EAAQ,SAAmC,KAAd,KAAKA,OAAc,EAAQ,QAAgBC,EAAEC,OAAOC,UAAW,QAAS,CACvGC,cAAc,EACdC,IAAK,EAAQ,W,oCCFf,EAAQ,QACR,IAAIC,EAAW,EAAQ,QACnBC,EAAS,EAAQ,QACjBC,EAAc,EAAQ,QACtBC,EAAY,WACZC,EAAY,IAAID,GAEhBE,EAAS,SAAUC,GACrB,EAAQ,OAAR,CAAuBV,OAAOC,UAAWM,EAAWG,GAAI,IAItD,EAAQ,OAAR,EAAoB,WAAc,MAAsD,QAA/CF,EAAUG,KAAK,CAAEC,OAAQ,IAAKd,MAAO,SAChFW,GAAO,WACL,IAAII,EAAIT,EAASU,MACjB,MAAO,IAAIC,OAAOF,EAAED,OAAQ,IAC1B,UAAWC,EAAIA,EAAEf,OAASQ,GAAeO,aAAab,OAASK,EAAOM,KAAKE,QAAKG,MAG3ER,EAAUS,MAAQV,GAC3BE,GAAO,WACL,OAAOD,EAAUG,KAAKG,U,iQCpB1B,SAASI,EAAWC,GAChB,GAAIA,EAAM,CACNA,EAAOA,EAAKC,WACZ,IAAIC,EAAU,IAAIC,KAAKH,GACnBI,EAAOF,EAAQG,cACfC,EAAQJ,EAAQK,WAAa,EAC7BD,EAAQ,KACRA,EAAQ,IAAMA,GAElB,IAAIE,EAAMN,EAAQO,UAIlB,OAHID,EAAM,KACNA,EAAM,IAAMA,GAETJ,EAAO,IAAME,EAAQ,IAAME,EAElC,MAAO,GAIf,SAASE,EAAeC,GACpB,GAAIA,EAAU,CACVA,EAAWA,EAASV,WACpB,IAAIW,EAAc,IAAIT,KAAKQ,GACvBP,EAAOQ,EAAYP,cACnBC,EAAQM,EAAYL,WAAa,EACrCD,EAAQA,EAAQ,EAAIA,EAAQ,IAAMA,EAClC,IAAIE,EAAMI,EAAYH,UACtBD,EAAMA,EAAM,EAAIA,EAAM,IAAMA,EAC5B,IAAIK,EAAID,EAAYE,WACpBD,EAAIA,EAAI,EAAIA,EAAI,IAAMA,EACtB,IAAIE,EAAIH,EAAYI,aACpBD,EAAIA,EAAI,EAAIA,EAAI,IAAMA,EACtB,IAAIE,EAAIL,EAAYM,aAEpB,OADAD,EAAIA,EAAI,EAAIA,EAAI,IAAMA,EACfb,EAAO,IAAME,EAAQ,IAAME,EAAM,IAAMK,EAAI,IAAME,EAAI,IAAME,EAElE,MAAO,GAKf,SAASE,EAAoBC,EAAKC,EAAUC,GACxCD,EAAWA,GAAY,IACvBC,EAAWA,GAAY,EACvBF,EAAMA,EAAIG,QAAQD,GAClB,IAAIE,EAAO,wBACPC,EAAO,oBACPC,EAASN,EAAIO,QAAQF,GAAM,SAAUG,EAAMC,GAC3C,OAAOD,EAAKD,QAAQH,EAAM,KAAKH,GAAYQ,KAE/C,OAAOH,EAIX,SAASI,EAAoBV,EAAKC,EAAUC,GAOxC,OANAD,EAAWA,GAAY,IACvBC,EAAWA,GAAY,EACvBF,EAAIA,EAAInB,WAERmB,EAAIA,EAAIO,QAAQ,aAAa,IAC7BP,EAAMA,EAAIG,QAAQD,GACXF","file":"js/chunk-656cde84.c3703914.js","sourcesContent":["// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","/* eslint-disable prettier/prettier */\n//转日期  年月日\nfunction dateFormat(date) {\n    if (date) {\n        date = date.toString();\n        let newDate = new Date(date);\n        let year = newDate.getFullYear();\n        let month = newDate.getMonth() + 1;\n        if (month < 10) {\n            month = \"0\" + month;\n        }\n        let day = newDate.getDate();\n        if (day < 10) {\n            day = \"0\" + day;\n        }\n        return year + \"-\" + month + \"-\" + day;\n    } else {\n        return \"\";\n    }\n}\n//转日期时间  年月日时分秒\nfunction dateTimeFormat(dateTime) {\n    if (dateTime) {\n        dateTime = dateTime.toString();\n        var newDateTime = new Date(dateTime);\n        let year = newDateTime.getFullYear();\n        let month = newDateTime.getMonth() + 1;\n        month = month > 9 ? month : \"0\" + month;\n        let day = newDateTime.getDate();\n        day = day > 9 ? day : \"0\" + day;\n        let h = newDateTime.getHours();\n        h = h > 9 ? h : \"0\" + h;\n        let m = newDateTime.getMinutes();\n        m = m > 9 ? m : \"0\" + m;\n        let s = newDateTime.getSeconds();\n        s = s > 9 ? s : \"0\" + s;\n        return year + \"-\" + month + \"-\" + day + \" \" + h + \":\" + m + \":\" + s;\n    } else {\n        return \"\";\n    }\n}\n\n// 数字转千分符\nfunction thousandToNumFormat(num, thousand, fixedNum) {\n    thousand = thousand || \",\";\n    fixedNum = fixedNum || 2;\n    num = num.toFixed(fixedNum);\n    let reg1 = /\\d{1,3}(?=(\\d{3})+$)/g;\n    let reg2 = /^(\\d+)((\\.\\d+)?)$/;\n    let result = num.replace(reg2, function (num1, num2) {\n        return num1.replace(reg1, \"$&\"+thousand) + num2\n    })\n    return result;\n}\n\n// 千分符转数字\nfunction numToThousandFormat(num, thousand, fixedNum) {\n    thousand = thousand || \",\";\n    fixedNum = fixedNum || 2;\n    num=num.toString();\n    //num=num.replace(/,/gi,\"\");\n    num=num.replace(/thousand/gi,\"\");\n    num = num.toFixed(fixedNum);\n    return num;\n}\n\nexport {\n    dateFormat,\n    dateTimeFormat,\n    thousandToNumFormat,\n    numToThousandFormat\n}"],"sourceRoot":""}