(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d213b43"],{ae8a:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("样式表")])]),a("p",[s._v("内嵌式是将CSS代码集中写在HTML文档的head头部标签中title标签之后，并且用style标签定义，其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text/CSS"')]),s._v(">")]),s._v("\n   选择器 {\n       属性1:属性值1;\n       属性2:属性值2;\n       属性3:属性值3;}\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("style")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n")])]),a("p",[s._v("内联样式，又称行内样式、行间样式、内嵌样式。是通过标签的style属性来设置元素的样式，行内式只对其所在的标签及嵌套在其中的子标签起作用。其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("标签名")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("style")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"属性1:属性值1; 属性2:属性值2; 属性3:属性值3;"')]),s._v(">")]),s._v(" 内容 "),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("标签名")]),s._v(">")]),s._v("\n")])]),a("p",[s._v("外部样式表（外链式）")]),a("p",[s._v("链入式是将所有的样式放在一个或多个以.CSS为扩展名的外部样式表文件中，通过link标签将外部样式表文件链接到HTML文档中，其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("link")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("href")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"CSS文件的路径"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("rel")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"stylesheet"')]),s._v(" />")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n")])]),a("p",[s._v("三种样式表总结（位置）")]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("样式表")]),a("th",[s._v("优点")]),a("th",[s._v("缺点")]),a("th",[s._v("使用情况")]),a("th",[s._v("控制范围")])])]),a("tbody",[a("tr",[a("td",[s._v("行内样式表")]),a("td",[s._v("书写方便，权重高")]),a("td",[s._v("没有实现样式和结构相分离")]),a("td",[s._v("较少")]),a("td",[s._v("控制一个标签（少）")])]),a("tr",[a("td",[s._v("内部样式表")]),a("td",[s._v("部分结构和样式相分离")]),a("td",[s._v("没有彻底分离")]),a("td",[s._v("较多")]),a("td",[s._v("控制一个页面（中）")])]),a("tr",[a("td",[s._v("外部样式表")]),a("td",[s._v("完全实现结构和样式相分离")]),a("td",[s._v("需要引入")]),a("td",[s._v("最多，强烈推荐")]),a("td",[s._v("控制整个站点（多）")])])])])]),a("p",[s._v("内部样式表和外部样式表最后的样式会覆盖之前的样式， 行内样式表会覆盖内部样式表和外部样式表。")])],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS基础选择器")])]),a("p",[s._v("要想将CSS样式应用于特定的HTML元素，首先需要找到该目标元素。在CSS中，执行这一任务的样式规则部分被称为选择器（选择符）。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("标签选择器（元素选择器）")])]),a("p",[s._v("标签选择器是指用HTML标签名称（例如div、span ）作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("标签(元素)名{属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("类选择器")])]),a("p",[s._v("类选择器使用“.”（英文点号）进行标识，后面紧跟类名，其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v(".类名{属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }\n")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[s._v("标签调用的时候用 class=“类名”  即可。\n类选择器最大的优势是可以为元素对象定义单独或相同的样式。 可以选择一个或者多个标签\n1.长名称或词组可以使用中横线来为选择器命名。\n2.不建议使用“_”下划线来命名CSS选择器。\n3.不要纯数字、中文等命名， 尽量使用英文字母来表示。\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("多类名选择器")])]),a("p",[s._v("我们可以给标签指定多个类名，从而达到更多的选择目的。\n多类名选择器在后期布局比较复杂的情况下，还是较多使用的。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("1. 样式显示效果跟"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("HTML")]),s._v("元素中的类名先后顺序没有关系,受"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("CSS")]),s._v("样式书写的上下顺序有关。\n2. 各个类名中间用空格隔开。\n")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"pink fontWeight font20"')]),s._v(">")]),s._v("亚瑟"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"font20"')]),s._v(">")]),s._v("刘备"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"font14 pink"')]),s._v(">")]),s._v("安其拉"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"font14"')]),s._v(">")]),s._v("貂蝉"),a("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("id选择器")])]),a("p",[s._v("id选择器使用“#”进行标识，后面紧跟id名，其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-id"}},[s._v("#id")]),s._v("名{属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }\n")])]),a("p",[s._v("该语法中，id名即为HTML元素的id属性值，大多数HTML元素都可以定义id属性，元素的id值是唯一的，只能对应于文档中某一个具体的元素。\n用法基本和类选择器相同。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("通配符选择器")])]),a("p",[s._v("通配符选择器用“*”号表示，他是所有选择器中作用范围最广的，能匹配页面中所有的元素。其基本语法格式如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("* { 属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }\n")])]),a("p",[s._v("例如下面的代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("* {\n "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("margin")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";                    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 定义外边距*/")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("padding")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";                   "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 定义内边距*/")]),s._v("\n}\n")])])],2)],2)],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS字体样式属性")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("font-size:字号大小")])]),a("p",[s._v("font-size属性用于设置字号，该属性的值可以使用相对长度单位，也可以使用绝对长度单位。其中，相对长度单位比较常用，推荐使用像素单位px，绝对长度单位使用较少。具体如下：")]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("相对长度单位")]),a("th",[s._v("说明")])])]),a("tbody",[a("tr",[a("td",[s._v("em")]),a("td",[s._v("相对于当前对象内文本的字体尺寸")])]),a("tr",[a("td",[s._v("px")]),a("td",[s._v("像素推荐使用")])])])])]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("绝对长度单位")]),a("th",[s._v("说明")])])]),a("tbody",[a("tr",[a("td",[s._v("in")]),a("td",[s._v("英寸")])]),a("tr",[a("td",[s._v("cm")]),a("td",[s._v("厘米")])]),a("tr",[a("td",[s._v("mm")]),a("td",[s._v("毫米")])]),a("tr",[a("td",[s._v("pt")]),a("td",[s._v("点")])])])])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("font-family:字体")])]),a("p",[s._v("font-family属性用于设置字体。网页中常用的字体有宋体、微软雅黑、黑体等，例如将网页中所有段落文本的字体设置为微软雅黑，可以使用如下CSS样式代码：\n可以同时指定多个字体，中间以逗号隔开，表示如果浏览器不支持第一个字体，则会尝试下一个，直到找到合适的字体。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[s._v("1. 现在网页中普遍使用14px+，使用偶数的数字字号。ie6等老式浏览器支持奇数会有bug。\n2. 各种字体之间必须使用英文状态下的逗号隔开，英文状态下的单引号或双引号，英文字体名必须位于中文字体名之前。\n3. 尽量使用系统默认字体，保证在任何用户的浏览器中都能正确显示。\n")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font-family")]),s._v(":"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"微软雅黑"')]),s._v(";}\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS Unicode字体")])]),a("p",[s._v("在 CSS 中设置字体名称，直接写中文是可以的。但是在文件编码（GB2312、UTF-8 等）不匹配时会产生乱码的错误。xp 系统不支持 类似微软雅黑的中文。")]),a("p",[s._v('方案一： 你可以使用英文来替代。 比如 font-family:"Microsoft Yahei"。\n方案二： 在 CSS 直接使用 Unicode 编码来写字体名称可以避免这些错误。使用 Unicode 写中文字体名称，浏览器是可以正确的解析的。')]),a("p",[s._v('font-family: "\\5FAE\\8F6F\\96C5\\9ED1"，表示设置字体为“微软雅黑”。\n可以通过escape()  来测试属于什么字体。')]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("字体名称")]),a("th",[s._v("英文名称")]),a("th",[s._v("Unicode 编码")])])]),a("tbody",[a("tr",[a("td",[s._v("宋体")]),a("td",[s._v("SimSun")]),a("td",[s._v("\\5B8B\\4F53")])]),a("tr",[a("td",[s._v("新宋体")]),a("td",[s._v("NSimSun")]),a("td",[s._v("\\65B0\\5B8B\\4F53")])]),a("tr",[a("td",[s._v("黑体")]),a("td",[s._v("SimHei")]),a("td",[s._v("\\9ED1\\4F53")])]),a("tr",[a("td",[s._v("微软雅黑")]),a("td",[s._v("Microsoft YaHei")]),a("td",[s._v("\\5FAE\\8F6F\\96C5\\9ED1")])]),a("tr",[a("td",[s._v("楷体_GB2312")]),a("td",[s._v("KaiTi_GB2312")]),a("td",[s._v("\\6977\\4F53_GB2312")])]),a("tr",[a("td",[s._v("隶书")]),a("td",[s._v("LiSu")]),a("td",[s._v("\\96B6\\4E66")])]),a("tr",[a("td",[s._v("幼园")]),a("td",[s._v("YouYuan")]),a("td",[s._v("\\5E7C\\5706")])]),a("tr",[a("td",[s._v("华文细黑")]),a("td",[s._v("STXihei")]),a("td",[s._v("\\534E\\6587\\7EC6\\9ED1")])]),a("tr",[a("td",[s._v("细明体")]),a("td",[s._v("MingLiU")]),a("td",[s._v("\\7EC6\\660E\\4F53")])]),a("tr",[a("td",[s._v("新细明体")]),a("td",[s._v("PMingLiU")]),a("td",[s._v("\\65B0\\7EC6\\660E\\4F53")])])])])]),a("p",[s._v("为了照顾不同电脑的字体安装问题，我们尽量只使用宋体和微软雅黑中文字体")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("font-weight:字体粗细")])]),a("p",[s._v("字体加粗除了用 b  和 strong 标签之外，可以使用CSS 来实现，但是CSS 是没有语义的。\n数字 400 等价于 normal，而 700 等价于 bold。  但是我们更喜欢用数字来表示。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-html"},[s._v("html")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[s._v("font-weight属性用于定义字体的粗细，其可用属性值：normal、bold、bolder、lighter、100~900（100的整数倍）。\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("font-style:字体风格")])]),a("p",[s._v("字体倾斜除了用 i  和 em 标签之外，可以使用CSS 来实现，但是CSS 是没有语义的。\nfont-style属性用于定义字体风格，如设置斜体、倾斜或正常字体，其可用属性值如下：\nnormal：默认值，浏览器会显示标准的字体样式。\nitalic：浏览器会显示斜体的字体样式。\noblique：浏览器会显示倾斜的字体样式。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("font:综合设置字体样式 (重点)")])]),a("p",[s._v("font属性用于对字体样式进行综合设置，其基本语法格式如下：\n使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以空格隔开。\n注意：其中不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font属性将不起作用。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("选择器{"),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font")]),s._v(": font-style  font-weight  font-size/line-height  font-family;}\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".firstdiv")]),s._v("{\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font")]),s._v(": oblique "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("700")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("38px")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"微软雅黑"')]),s._v(";\n}\n")])])],2)],2)],2)],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS外观属性")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("color:文本颜色")])]),a("p",[s._v("color属性用于定义文本的颜色，其取值方式有如下3种：")]),a("p",[s._v("1.预定义的颜色值，如red，green，blue等。\n2.十六进制，如#FF0000，#FF6600，#29D794等。实际工作中，十六进制是最常用的定义颜色的方式。\n3.RGB代码，如红色可以表示为rgb(255,0,0)或rgb(100%,0%,0%)。\n需要注意的是，如果使用RGB代码的百分比颜色值，取值为0时也不能省略百分号，必须写为0%。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("line-height:行间距")])]),a("p",[s._v("ine-height属性用于设置行间距，就是行与行之间的距离，即字符的垂直间距，一般称为行高。line-height常用的属性值单位有三种，分别为像素px，相对值em和百分比%，实际工作中使用最多的是像素px\n一般情况下，行距比字号大7.8像素左右就可以了。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("text-align:水平对齐方式")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("text-align")]),s._v("属性用于设置文本内容的水平对齐，相当于"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("html")]),s._v("中的"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("align")]),s._v("对齐属性。其可用属性值如下：\n")])]),a("p",[s._v("left：左对齐（默认值）\nright：右对齐\ncenter：居中对齐")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("text-indent:首行缩进")])]),a("p",[s._v("text-indent属性用于设置首行文本的缩进，其属性值可为不同单位的数值、em字符宽度的倍数、或相对于浏览器窗口宽度的百分比%，允许使用负值, 建议使用em作为设置单位。\n1em 就是一个字的宽度   如果是汉字的段落， 1em 就是一个汉字的宽度")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("text-decoration 文本的装饰")])]),a("p",[s._v("text-decoration   通常我们用于给链接修改装饰效果")]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("值")]),a("th",[s._v("描述")])])]),a("tbody",[a("tr",[a("td",[s._v("none")]),a("td",[s._v("默认。定义标准的文本。")])]),a("tr",[a("td",[s._v("underline")]),a("td",[s._v("定义文本下的一条线。下划线 也是我们链接自带的")])]),a("tr",[a("td",[s._v("overline")]),a("td",[s._v("定义文本上的一条线。")])]),a("tr",[a("td",[s._v("line-through")]),a("td",[s._v("定义穿过文本下的一条线。")])])])])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS复合选择器")])]),a("p",[s._v("复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的,目的是为了可以选择更准确更精细的目标元素标签。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("交集选择器")])]),a("p",[s._v("交集选择器由两个选择器构成，其中第一个为标签选择器，第二个为class选择器，两个选择器之间不能有空格，如h3.special。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*p.one   选择的是： 类名为 .one  的 段落标签。  */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".one")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(":red;\n}\n")])]),a("p",[s._v("用的相对来说比较少，不太建议使用。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("并集选择器")])]),a("p",[s._v("并集选择器（CSS选择器分组）是各个选择器通过"),a("strong",{staticStyle:{color:"#f00"}},[s._v("逗号")]),s._v("连接而成的，任何形式的选择器（包括标签选择器、class类选择器id选择器等），都可以作为并集选择器的一部分。如果某些选择器定义的样式完全相同，或部分相同，就可以利用并集选择器为它们定义相同的CSS样式。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。  通常用于集体声明。*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".one")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v(" , "),a("span",{pre:!0,attrs:{class:"hljs-selector-id"}},[s._v("#test")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("#F00")]),s._v(";\n}  \n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("后代选择器")])]),a("p",[s._v("后代选择器又称为包含选择器，用来选择元素或元素组的后代，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。  通常用于集体声明。*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("#F00")]),s._v(";\n}  \n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("子元素选择器")])]),a("p",[s._v("子元素选择器只能选择作为某元素子元素的元素。其写法就是把父级标签写在前面，子级标签写在后面，中间跟一个 > 进行连接，注意，符号左右两侧各保留一个空格。这里的子 指的是 亲儿子  不包含孙子 重孙子之类。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("比如：  \n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".demo")]),s._v(" > "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("h3")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": red;\n    }   "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*  h3 一定是demo 亲儿子。  demo 元素包含着h3。*/")]),s._v("\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("伪类选择器")])]),a("p",[s._v("伪类选择器用于向某些选择器添加特殊的效果。比如给链接添加特殊效果， 比如可以选择 第1个，第n个元素。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("为了和我们刚才学的类选择器相区别，  类选择器是一个点 比如 "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".demo")]),s._v(" {}   而我们的伪类 用 2个点 就是 冒号  比如  "),a("span",{pre:!0,attrs:{class:"hljs-selector-pseudo"}},[s._v(":link")]),s._v("{}\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("链接伪类选择器")])]),a("ul",[a("li",[a("p",[s._v(":link      /* 未访问的链接 */")])]),a("li",[a("p",[s._v(":visited   /* 已访问的链接 */")])]),a("li",[a("p",[s._v(":hover     /* 鼠标移动到链接上 */")])]),a("li",[a("p",[s._v(":active    /* 选定的链接 */")]),a("p",[s._v("注意写的时候，他们的顺序尽量不要颠倒  按照  lvha 的顺序。   love   hate")])])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),s._v(" {   "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* a是标签选择器  所有的链接 */")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font-weight")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("700")]),s._v(";\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font-size")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("16px")]),s._v(";\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": gray;\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"hljs-selector-pseudo"}},[s._v(":hover")]),s._v(" {   "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* :hover 是链接伪类选择器 鼠标经过 */")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("color")]),s._v(": red; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*  鼠标经过的时候，由原来的 灰色 变成了红色 */")]),s._v("\n}\n")])])],2)],2)],2)],2)],2)],2)],2)],2)],2)],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS注释")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v(" {\n "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font-size")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("14px")]),s._v(";                 "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 所有的字体是14像素大小*/")]),s._v("\n}\n")])])],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("标签显示模式（display）")])]),a("p",[s._v("HTML标签一般分为块标签和行内标签两种类型，它们也称块元素和行内元素。具体如下：")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("块级元素(block-level)")])]),a("p",[s._v("每个块元素通常都会独自占据一整行或多整行，可以对其设置宽度、高度、对齐等属性，常用于网页布局和网页结构的搭建。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("常见的块元素有<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("h1")]),s._v(">~<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("h6")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("div")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("ul")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("ol")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("li")]),s._v(">等，其中<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("div")]),s._v(">标签是最典型的块元素。\n")])]),a("p",[s._v("块级元素的特点：\n（1）总是从新行开始\n（2）高度，行高、外边距以及内边距都可以控制。\n（3）宽度默认是容器的100%\n（4）可以容纳内联元素和其他块元素。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("行内元素(inline-level)")])]),a("p",[s._v("行内元素（内联元素）不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("常见的行内元素有<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("strong")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("b")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("em")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("i")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("del")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("s")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("ins")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("u")]),s._v(">、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("span")]),s._v(">等，其中<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("span")]),s._v(">标签最典型的行内元素。\n")])]),a("p",[s._v("行内元素的特点：\n（1）和相邻行内元素在一行上。\n（2）高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。\n（3）默认宽度就是它本身内容的宽度。\n（4）行内元素只能容纳文本或则其他行内元素。（a特殊）")]),a("p",[s._v("注意：")]),a("ol",[a("li",[s._v("只有 文字才 能组成段落  因此 p  里面不能放块级元素，同理还有这些标签h1,h2,h3,h4,h5,h6,dt，他们都是文字类块级标签，里面不能放其他块级元素。")]),a("li",[s._v("链接里面不能再放链接。")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("块级元素和行内元素区别")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("块级元素的特点：\n（1）总是从新行开始\n（2）高度，行高、外边距以及内边距都可以控制。\n（3）宽度默认是容器的100%\n（4）可以容纳内联元素和其他块元素。\n")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("行内元素的特点：\n（1）和相邻行内元素在一行上。\n（2）高、宽无效，但水平方向的"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("padding")]),s._v("和"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("margin")]),s._v("可以设置，垂直方向的无效。\n（3）默认宽度就是它本身内容的宽度。\n（4）行内元素只能容纳文本或则其他行内元素（<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),s._v(">标签特殊，里面可以放块级元素 ）。\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("行内块元素（inline-block）")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("在行内元素中有几个特殊的标签——<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("img")]),s._v(" />、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("input")]),s._v(" />、<"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("td")]),s._v(">，可以对它们设置宽高和对齐属性，有些资料可能会称它们为行内块元素。\n\n行内块元素的特点：\n（1）和相邻行内元素（行内块）在一行上,但是之间会有空白缝隙。\n（2）默认宽度就是它本身内容的宽度。\n（3）高度，行高、外边距以及内边距都可以控制。\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("标签显示模式转换 display")])]),a("p",[s._v("块转行内：display:inline;\n行内转块：display:block;\n块、行内元素转换为行内块： display: inline-block;\n此阶段，我们只需关心这三个，其他的是我们后面的工作。")])],2)],2)],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS书写规范")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("空格规范")])]),a("p",[s._v("【强制】 选择器 与 { 之间必须包含空格。\n【强制】 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".selector")]),s._v(" {"),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("font-size")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12px")]),s._v("; }\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("选择器规范")])]),a("p",[s._v("【强制】 当一个 rule 包含多个 selector 时，每个选择器声明必须独占一行。\n【建议】 选择器的嵌套层级应不大于 3 级，位置靠后的限定条件应尽可能精确。")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* good */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".post")]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".page")]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".comment")]),s._v(" {\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("line-height")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.5")]),s._v(";\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* bad */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".post")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".page")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".comment")]),s._v(" {\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("line-height")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1.5")]),s._v(";\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* good */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-id"}},[s._v("#username")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("input")]),s._v(" {}\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".comment")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".avatar")]),s._v(" {}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* bad */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".page")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".header")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".login")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-id"}},[s._v("#username")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("input")]),s._v(" {}\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".comment")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("div")]),s._v(" * {}\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("属性规范")])]),a("p",[s._v("【强制】 属性定义必须另起一行。\n【强制】 属性定义后必须以分号结尾。")]),a("p",[s._v("示例：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* good */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".selector")]),s._v(" {\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("margin")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("padding")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* bad */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".selector")]),s._v(" { "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("margin")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("padding")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; }\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* good */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".selector")]),s._v(" {\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("margin")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* bad */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".selector")]),s._v(" {\n   "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("margin")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n}\n")])])],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS 三大特性 层叠 继承  优先级 是CSS 必须掌握的三个特性。")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS层叠性：多种CSS样式的叠加")])]),a("p",[s._v("是浏览器处理冲突的一个能力,如果一个属性通过两个相同选择器设置到同一个元素上，那么这个时候一个属性就会将另一个属性层叠掉\n比如先给某个标签指定了内部文字颜色为红色，接着又指定了颜色为蓝色，此时出现一个标签指定了相同样式不同值的情况，这就是样式冲突。  就近原则\n一般情况下，如果出现样式冲突，则会按照CSS书写的顺序，以最后的样式为准。")]),a("ol",[a("li",[s._v("样式冲突，遵循的原则是就近原则。 那个样式离着结构近，就执行那个样式。")]),a("li",[s._v("样式不冲突，不会层叠")])]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS继承性")])]),a("p",[s._v("所谓继承性是指书写CSS样式表时，子标签会继承父标签的某些样式，如文本颜色和字号。想要设置一个可继承的属性，只需将它应用于父元素即可。\n简单的理解就是：  子承父业。\n恰当地使用继承可以简化代码，降低CSS样式的复杂性。子元素可以继承父元素的样式（text-，font-，line-这些元素开头的都可以继承，以及color属性）")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS优先级")])]),a("p",[s._v("定义CSS样式时，经常出现两个或更多规则应用在同一元素上，这时就会出现优先级的问题。\n在考虑权重时，初学者还需要注意一些特殊的情况，具体如下：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[s._v("继承样式的权重为0。即在嵌套结构中，不管父元素样式的权重多大，被子元素继承时，他的权重都为0，也就是说子元素定义的样式会覆盖继承来的样式。\n行内样式优先。应用"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("style")]),s._v("属性的元素，其行内样式的权重非常高，可以理解为远大于100。总之，他拥有比上面提高的选择器都大的优先级。\n权重相同时，"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("CSS")]),s._v("遵循就近原则。也就是说靠近元素的样式具有最大的优先级，或者说排在最后的样式优先级最大。\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("CSS")]),s._v("定义了一个!"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("important")]),s._v("命令，该命令被赋予最大的优先级。也就是说不管权重如何以及样式位置的远近，!"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("important")]),s._v("都具有最大优先级。\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS特殊性（Specificity）")])]),a("p",[s._v("关于CSS权重，我们需要一套计算公式来去计算，这个就是 CSS Specificity，我们称为CSS 特性或称非凡性，它是一个衡量CSS值优先级的一个标准 具体规范入如下：\nspecificity用一个四位的数 字串(CSS2是三位)来表示，更像四个级别，值从左到右，左面的最大，一级大于一级，数位之间没有进制，级别之间不可超越。")]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("继承或者* 的贡献值")]),a("th",[s._v("0,0,0,0")])])]),a("tbody",[a("tr",[a("td",[s._v("每个元素（标签）贡献值为")]),a("td",[s._v("0,0,0,1")])]),a("tr",[a("td",[s._v("每个类，伪类贡献值为")]),a("td",[s._v("0,0,1,0")])]),a("tr",[a("td",[s._v("每个ID贡献值为")]),a("td",[s._v("0,1,0,0")])]),a("tr",[a("td",[s._v("每个行内样式贡献值")]),a("td",[s._v("1,0,0,0")])]),a("tr",[a("td",[s._v("每个!important贡献值  重要的")]),a("td",[s._v("∞ 无穷大")])])])])]),a("p",[s._v("权重是可以叠加的 比如的例子：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("ul")]),s._v("  "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("li")]),s._v("   "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("------")]),s._v(">      0,0,0,3\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".nav")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("ul")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("li")]),s._v("   "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("------")]),s._v(">      0,0,1,2\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"hljs-selector-pseudo"}},[s._v(":hover")]),s._v("      "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("-----")]),s._v("—>      0,0,1,1\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".nav")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("a")]),s._v("       "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("------")]),s._v(">      0,0,1,1\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-id"}},[s._v("#nav")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("p")]),s._v("       "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("-----")]),s._v(">       0,1,0,1\n")])]),a("p",[s._v("总结优先级：")]),a("ol",[a("li",[s._v("使用了 !important声明的规则。")]),a("li",[s._v("内嵌在 HTML 元素的 style属性里面的声明。")]),a("li",[s._v("使用了 ID 选择器的规则。")]),a("li",[s._v("使用了类选择器、属性选择器、伪元素和伪类选择器的规则。")]),a("li",[s._v("使用了元素选择器的规则。")]),a("li",[s._v("只包含一个通用选择器的规则。")]),a("li",[s._v("同一类选择器则遵循就近原则。")]),a("li",[s._v("权重是优先级的算法，层叠是优先级的表现")])])],2)],2)],2)],2)],2),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("CSS 背景(background)")])]),a("p",[s._v("CSS 可以添加背景颜色和背景图片，以及来进行图片设置。")]),a("div",{staticClass:"hv-snippet--table"},[a("table",[a("thead",[a("tr",[a("th",[s._v("background-color")]),a("th",[s._v("背景颜色")])])]),a("tbody",[a("tr",[a("td",[s._v("background-image")]),a("td",[s._v("背景图片地址")])]),a("tr",[a("td",[s._v("background-repeat")]),a("td",[s._v("是否平铺")])]),a("tr",[a("td",[s._v("background-position")]),a("td",[s._v("背景位置")])]),a("tr",[a("td",[s._v("background-attachment")]),a("td",[s._v("背景固定还是滚动")])]),a("tr",[a("td",[s._v("背景的合写（复合属性）")]),a("td")]),a("tr",[a("td",[s._v("background:背景颜色 背景图片地址 背景平铺 背景滚动 背景位置")]),a("td")])])])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景图片(image)")])]),a("p",[s._v("语法：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background-image")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("none")]),s._v(" | "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("url")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("url")]),s._v(")\n")])]),a("p",[s._v("参数：")]),a("p",[s._v("none : 　无背景图（默认的）\nurl : 　使用绝对或相对地址指定背景图像\nbackground-image 属性允许指定一个图片展示在背景中（只有CSS3才可以多背景）可以和 background-color 连用。 如果图片不重复地话，图片覆盖不到地地方都会被背景色填充。 如果有背景图片平铺，则会覆盖背景颜色。\n小技巧：  我们提倡 背景图片后面的地址，url不要加引号。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景平铺（repeat）")])]),a("p",[s._v("语法：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background-repeat")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("repeat")]),s._v(" | "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("no-repeat")]),s._v(" | "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("repeat-x")]),s._v(" | "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("repeat-y")]),s._v("\n")])]),a("p",[s._v("参数：\nrepeat : 　背景图像在纵向和横向上平铺（默认的）\nno-repeat : 　背景图像不平铺\nrepeat-x : 　背景图像在横向上平铺\nrepeat-y : 　背景图像在纵向平铺\n设置背景图片时，默认把图片在水平和垂直方向平铺以铺满整个元素。\nrepeat-x : 　背景图像在横向上平铺"),a("br"),s._v("\nrepeat-y : 　背景图像在纵向平铺\n设置背景图片时，默认把图片在水平和垂直方向平铺以铺满整个元素。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景位置(position)")])]),a("p",[s._v("语法：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background-position")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("length")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("length")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background-position")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("position")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("position")]),s._v("\n")])]),a("p",[s._v("参数：\nlength : 　百分数 | 由浮点数字和单位标识符组成的长度值。请参阅长度单位\nposition : 　top | center | bottom | left | center | right\n说明：\n设置或检索对象的背景图像位置。必须先指定background-image属性。默认值为：(0% 0%)。\n如果只指定了一个值，该值将用于横坐标。纵坐标将默认为50%。第二个值将用于纵坐标。\n注意：")]),a("ol",[a("li",[s._v("position 后面是x坐标和y坐标。 可以使用方位名词或者 精确单位。")]),a("li",[s._v("如果和精确单位和方位名字混合使用，则必须是x坐标在前，y坐标后面。比如 background-position: 15px top;   则 15px 一定是  x坐标   top是 y坐标。")])]),a("p",[s._v("实际工作用的最多的，就是背景图片居中对齐了。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景附着")])]),a("p",[s._v("语法：")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background-attachment")]),s._v(" : "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("scroll")]),s._v(" | "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("fixed")]),s._v("\n")])]),a("p",[s._v("参数：\nscroll : 　背景图像是随对象内容滚动\nfixed : 　背景图像固定")]),a("p",[s._v("说明：\n设置或检索背景图像是随对象内容滚动还是固定的。")]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景简写")])]),a("p",[s._v("background属性的值的书写顺序官方并没有强制标准的。为了可读性，建议大家如下写：\nbackground:背景颜色 背景图片地址 背景平铺 背景滚动 背景位置")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("transparent")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("url")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".jpg")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("repeat-y")]),s._v("  "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("scroll")]),s._v(" 50% 0 ;\n")])]),a("hv-snippet",{attrs:{title:""}},[a("template",{slot:"title"},[a("p",[s._v("背景透明(CSS3)")])]),a("p",[s._v("CSS3支持背景半透明的写法语法格式是:")]),a("div",{staticClass:"hv-snippet--tag hv-snippet--tag-css"},[s._v("css")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("background")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-selector-tag"}},[s._v("rgba")]),s._v("(0,0,0,0"),a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".3")]),s._v(");\n")])]),a("p",[s._v("最后一个参数是alpha 透明度  取值范围 0~1之间\n注意：  背景半透明是指盒子背景半透明， 盒子里面的内容不收影响。")])],2)],2)],2)],2)],2)],2)],2)],1)},p=[],l=a("2877"),r={},v=Object(l["a"])(r,e,p,!1,null,null,null);t["default"]=v.exports}}]);
//# sourceMappingURL=chunk-2d213b43.0fa9297f.js.map