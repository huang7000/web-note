(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d6b64"],{"745f":function(e,o,s){"use strict";s.r(o);var d=function(){var e=this,o=e.$createElement,s=e._self._c||o;return s("section",[s("hv-snippet",{attrs:{title:""}},[s("template",{slot:"title"},[s("p",[e._v("相对 vs 非相对模块导入")])]),s("p",[e._v("相对导入是以"),s("code",{pre:!0},[e._v("/")]),e._v("，"),s("code",{pre:!0},[e._v("./")]),e._v("或"),s("code",{pre:!0},[e._v("../")]),e._v("开头的。")]),s("div",{staticClass:"hv-snippet--tag hv-snippet--tag-typescript"},[e._v("typescript")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("import")]),e._v(" Entry "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"./components/Entry"')]),e._v(";\n"),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("import")]),e._v(" { DefaultHeaders } "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"../constants/http"')]),e._v(";\n"),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("import")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"/mod"')]),e._v(";\n")])]),s("p",[e._v("所有其它形式的导入被当作非相对的。")]),s("div",{staticClass:"hv-snippet--tag hv-snippet--tag-typescript"},[e._v("typescript")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-typescript"}},[s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("import")]),e._v(" * "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("as")]),e._v(" $ "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"jQuery"')]),e._v(";\n"),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("import")]),e._v(" { Component } "),s("span",{pre:!0,attrs:{class:"hljs-keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[e._v('"@angular/core"')]),e._v(";\n")])]),s("blockquote",[s("p",[e._v("相对导入在解析时是相对于导入它的文件，并且不能解析为一个外部模块声明。\n非相对模块的导入可以相对于baseUrl或通过下文会讲到的路径映射来进行解析。 它们还可以被解析成 外部模块声明。 使用非相对路径来导入你的外部依赖。")])])],2),s("hv-snippet",{attrs:{title:""}},[s("template",{slot:"title"},[s("p",[e._v("模块解析策略")])]),s("p",[e._v("共有两种可用的模块解析策略：Node和Classic。 你可以使用 --moduleResolution标记来指定使用哪种模块解析策略。若未指定，那么在使用了 --module AMD | System | ES2015时的默认值为Classic，其它情况时则为Node。")])],2),s("hv-snippet",{attrs:{title:""}},[s("template",{slot:"title"},[s("p",[e._v("Classic")])]),s("p",[e._v("相对导入的模块是相对于导入它的文件进行解析的。 因此 "),s("code",{pre:!0},[e._v("/root/src/folder/A.")]),e._v("ts文件里的"),s("code",{pre:!0},[e._v('import { b } from "./moduleB"')]),e._v("会使用下面的查找流程：")]),s("ol",[s("li",[s("code",{pre:!0},[e._v("/root/src/folder/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/folder/moduleB.d.ts")])])]),s("p",[e._v("对于非相对模块的导入，编译器则会从包含导入文件的目录开始依次向上级目录遍历，尝试定位匹配的声明文件。")]),s("p",[e._v("有一个对moduleB的非相对导入"),s("code",{pre:!0},[e._v('import { b } from "moduleB"')]),e._v("，它是在"),s("code",{pre:!0},[e._v("/root/src/folder/A.ts")]),e._v('文件里，会以如下的方式来定位"moduleB"：')]),s("ol",[s("li",[s("code",{pre:!0},[e._v("/root/src/folder/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/folder/moduleB.d.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB.d.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/moduleB.d.ts")])]),s("li",[s("code",{pre:!0},[e._v("/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/moduleB.d.ts")])])])],2),s("hv-snippet",{attrs:{title:""}},[s("template",{slot:"title"},[s("p",[e._v("Node")])]),s("p",[e._v("相对路径很简单。 例如，假设有一个文件路径为 "),s("code",{pre:!0},[e._v("/root/src/moduleA.js")]),e._v("，包含了一个导入"),s("code",{pre:!0},[e._v('var x = require("./moduleB");')]),e._v(" Node.js以下面的顺序解析这个导入：")]),s("ol",[s("li",[s("p",[e._v("检查"),s("code",{pre:!0},[e._v("/root/src/moduleB.js")]),e._v("文件是否存在。")])]),s("li",[s("p",[e._v("检查"),s("code",{pre:!0},[e._v("/root/src/moduleB")]),e._v('目录是否包含一个package.json文件，且package.json文件指定了一个"main"模块。 在我们的例子里，如果Node.js发现文件 /root/src/moduleB/package.json包含了{ "main": "lib/mainModule.js" }，那么Node.js会引用/root/src/moduleB/lib/mainModule.js。')])]),s("li",[s("p",[e._v("检查"),s("code",{pre:!0},[e._v("/root/src/moduleB")]),e._v("目录是否包含一个"),s("code",{pre:!0},[e._v("index.js")]),e._v('文件。 这个文件会被隐式地当作那个文件夹下的"main"模块。')])])]),s("p",[e._v("假设"),s("code",{pre:!0},[e._v("/root/src/moduleA.js")]),e._v("里使用的是非相对路径导入"),s("code",{pre:!0},[e._v('var x = require("moduleB");')]),e._v("。 Node则会以下面的顺序去解析 moduleB，直到有一个匹配上。")]),s("ol",[s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB.js")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/package.json")]),e._v(' (如果指定了"main"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/index.js")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB.js")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/package.json")]),e._v(' (如果指定了"main"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/index.js")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB.js")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/package.json")]),e._v(' (如果指定了"main"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/index.js")])])])])],2),s("hv-snippet",{attrs:{title:""}},[s("template",{slot:"title"},[s("p",[e._v("TypeScript如何解析模块")])]),s("p",[e._v('TypeScript是模仿Node.js运行时的解析策略来在编译阶段定位模块定义文件。 因此，TypeScript在Node解析逻辑基础上增加了TypeScript源文件的扩展名（ .ts，.tsx和.d.ts）。 同时，TypeScript在 package.json里使用字段"types"来表示类似"main"的意义 - 编译器会使用它来找到要使用的"main"定义文件。')]),s("p",[e._v("相对的导入"),s("code",{pre:!0},[e._v('import { b } from "./moduleB"')]),e._v("在"),s("code",{pre:!0},[e._v("/root/src/moduleA.ts")]),e._v('里，会以下面的流程来定位"./moduleB"：')]),s("ol",[s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB.tsx")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB.d.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB/package.json")]),e._v(' (如果指定了"types"属性)')]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB/index.ts")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB/index.tsx")])]),s("li",[s("code",{pre:!0},[e._v("/root/src/moduleB/index.d.ts")])])]),s("p",[e._v("非相对的导入会遵循Node.js的解析逻辑，首先查找文件，然后是合适的文件夹。 因此 "),s("code",{pre:!0},[e._v("/root/src/moduleA.ts")]),e._v("文件里的"),s("code",{pre:!0},[e._v('import { b } from "moduleB"')]),e._v("会以下面的查找顺序解析：")]),s("ol",[s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB.d.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/package.json")]),e._v(' (如果指定了"types"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/index.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/index.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/src/node_modules/moduleB/index.d.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB.d.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/package.json")]),e._v(' (如果指定了"types"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/index.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/index.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/root/node_modules/moduleB/index.d.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB.d.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/package.json")]),e._v(' (如果指定了"types"属性)')])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/index.ts")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/index.tsx")])])]),s("li",[s("p",[s("code",{pre:!0},[e._v("/node_modules/moduleB/index.d.ts")])])])])],2)],1)},r=[],t=s("2877"),l={},p=Object(t["a"])(l,d,r,!1,null,null,null);o["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0d6b64.c98eb702.js.map